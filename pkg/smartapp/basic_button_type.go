// Code generated by go-swagger; DO NOT EDIT.

package smartapp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// BasicButtonType The type of buttons to render.
//
// * TEXT - A colored button with a text overrlay.
// * ICON - A button with an image backgroup and text overrlay.
//
// swagger:model BasicButtonType
type BasicButtonType string

const (

	// BasicButtonTypeTEXT captures enum value "TEXT"
	BasicButtonTypeTEXT BasicButtonType = "TEXT"

	// BasicButtonTypeICON captures enum value "ICON"
	BasicButtonTypeICON BasicButtonType = "ICON"
)

// for schema
var basicButtonTypeEnum []interface{}

func init() {
	var res []BasicButtonType
	if err := json.Unmarshal([]byte(`["TEXT","ICON"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		basicButtonTypeEnum = append(basicButtonTypeEnum, v)
	}
}

func (m BasicButtonType) validateBasicButtonTypeEnum(path, location string, value BasicButtonType) error {
	if err := validate.Enum(path, location, value, basicButtonTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this basic button type
func (m BasicButtonType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBasicButtonTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
