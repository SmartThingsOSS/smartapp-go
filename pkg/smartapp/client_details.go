// Code generated by go-swagger; DO NOT EDIT.

package smartapp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ClientDetails Known details about the client application from which the request was initiated.  This information is provided
// on best effort basis.  All properties maybe null or empty.
//
// swagger:model ClientDetails
type ClientDetails struct {

	// Language header representing the client's preferred language. The format of the `Accept-Language` header follows what is defined in [RFC 7231, section 5.3.5](https://tools.ietf.org/html/rfc7231#section-5.3.5)
	// Max Length: 250
	Language string `json:"language,omitempty"`

	// The operating system of the client application initiating the request.
	// Max Length: 16
	Os string `json:"os,omitempty"`

	// The version of the client application initiating the request.
	// Max Length: 16
	Version string `json:"version,omitempty"`
}

// Validate validates this client details
func (m *ClientDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLanguage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOs(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClientDetails) validateLanguage(formats strfmt.Registry) error {

	if swag.IsZero(m.Language) { // not required
		return nil
	}

	if err := validate.MaxLength("language", "body", string(m.Language), 250); err != nil {
		return err
	}

	return nil
}

func (m *ClientDetails) validateOs(formats strfmt.Registry) error {

	if swag.IsZero(m.Os) { // not required
		return nil
	}

	if err := validate.MaxLength("os", "body", string(m.Os), 16); err != nil {
		return err
	}

	return nil
}

func (m *ClientDetails) validateVersion(formats strfmt.Registry) error {

	if swag.IsZero(m.Version) { // not required
		return nil
	}

	if err := validate.MaxLength("version", "body", string(m.Version), 16); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ClientDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClientDetails) UnmarshalBinary(b []byte) error {
	var res ClientDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
