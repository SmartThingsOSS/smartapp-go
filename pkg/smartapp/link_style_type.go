// Code generated by go-swagger; DO NOT EDIT.

package smartapp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LinkStyleType Style of the setting.
// swagger:model LinkStyleType
type LinkStyleType string

const (

	// LinkStyleTypeCOMPLETE captures enum value "COMPLETE"
	LinkStyleTypeCOMPLETE LinkStyleType = "COMPLETE"

	// LinkStyleTypeERROR captures enum value "ERROR"
	LinkStyleTypeERROR LinkStyleType = "ERROR"

	// LinkStyleTypeDEFAULT captures enum value "DEFAULT"
	LinkStyleTypeDEFAULT LinkStyleType = "DEFAULT"

	// LinkStyleTypeBUTTON captures enum value "BUTTON"
	LinkStyleTypeBUTTON LinkStyleType = "BUTTON"
)

// for schema
var linkStyleTypeEnum []interface{}

func init() {
	var res []LinkStyleType
	if err := json.Unmarshal([]byte(`["COMPLETE","ERROR","DEFAULT","BUTTON"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		linkStyleTypeEnum = append(linkStyleTypeEnum, v)
	}
}

func (m LinkStyleType) validateLinkStyleTypeEnum(path, location string, value LinkStyleType) error {
	if err := validate.Enum(path, location, value, linkStyleTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this link style type
func (m LinkStyleType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLinkStyleTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
