// Code generated by go-swagger; DO NOT EDIT.

package smartapp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// SceneLifecycle The scene lifecycle. The lifecycle will be one of:
// * CREATE - Invoked when a scene is created.
// * UPDATE - Invoked when a scene is updated.
// * DELETE - Invoked when a scene is deleted.
//
// swagger:model SceneLifecycle
type SceneLifecycle string

const (

	// SceneLifecycleCREATE captures enum value "CREATE"
	SceneLifecycleCREATE SceneLifecycle = "CREATE"

	// SceneLifecycleUPDATE captures enum value "UPDATE"
	SceneLifecycleUPDATE SceneLifecycle = "UPDATE"

	// SceneLifecycleDELETE captures enum value "DELETE"
	SceneLifecycleDELETE SceneLifecycle = "DELETE"
)

// for schema
var sceneLifecycleEnum []interface{}

func init() {
	var res []SceneLifecycle
	if err := json.Unmarshal([]byte(`["CREATE","UPDATE","DELETE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sceneLifecycleEnum = append(sceneLifecycleEnum, v)
	}
}

func (m SceneLifecycle) validateSceneLifecycleEnum(path, location string, value SceneLifecycle) error {
	if err := validate.Enum(path, location, value, sceneLifecycleEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this scene lifecycle
func (m SceneLifecycle) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSceneLifecycleEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
