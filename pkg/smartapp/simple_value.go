// Code generated by go-swagger; DO NOT EDIT.

package smartapp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SimpleValue A simple value.
// swagger:model SimpleValue
type SimpleValue struct {

	// bool value
	BoolValue bool `json:"boolValue,omitempty"`

	// double value
	DoubleValue float64 `json:"doubleValue,omitempty"`

	// int value
	IntValue int64 `json:"intValue,omitempty"`

	// string value
	StringValue string `json:"stringValue,omitempty"`

	// The type of the value.
	//
	// Enum: [NULL_VALUE INT_VALUE DOUBLE_VALUE STRING_VALUE BOOLEAN_VALUE]
	ValueType string `json:"valueType,omitempty"`
}

// Validate validates this simple value
func (m *SimpleValue) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValueType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var simpleValueTypeValueTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NULL_VALUE","INT_VALUE","DOUBLE_VALUE","STRING_VALUE","BOOLEAN_VALUE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		simpleValueTypeValueTypePropEnum = append(simpleValueTypeValueTypePropEnum, v)
	}
}

const (

	// SimpleValueValueTypeNULLVALUE captures enum value "NULL_VALUE"
	SimpleValueValueTypeNULLVALUE string = "NULL_VALUE"

	// SimpleValueValueTypeINTVALUE captures enum value "INT_VALUE"
	SimpleValueValueTypeINTVALUE string = "INT_VALUE"

	// SimpleValueValueTypeDOUBLEVALUE captures enum value "DOUBLE_VALUE"
	SimpleValueValueTypeDOUBLEVALUE string = "DOUBLE_VALUE"

	// SimpleValueValueTypeSTRINGVALUE captures enum value "STRING_VALUE"
	SimpleValueValueTypeSTRINGVALUE string = "STRING_VALUE"

	// SimpleValueValueTypeBOOLEANVALUE captures enum value "BOOLEAN_VALUE"
	SimpleValueValueTypeBOOLEANVALUE string = "BOOLEAN_VALUE"
)

// prop value enum
func (m *SimpleValue) validateValueTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, simpleValueTypeValueTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SimpleValue) validateValueType(formats strfmt.Registry) error {

	if swag.IsZero(m.ValueType) { // not required
		return nil
	}

	// value enum
	if err := m.validateValueTypeEnum("valueType", "body", m.ValueType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SimpleValue) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SimpleValue) UnmarshalBinary(b []byte) error {
	var res SimpleValue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
