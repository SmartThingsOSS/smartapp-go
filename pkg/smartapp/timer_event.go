// Code generated by go-swagger; DO NOT EDIT.

package smartapp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TimerEvent An event that is caused by a schedule for this app being fired.
// swagger:model TimerEvent
type TimerEvent struct {

	// The ID of the event.
	EventID string `json:"eventId,omitempty"`

	// The CRON expression if the schedule was of type CRON.
	Expression string `json:"expression,omitempty"`

	// The name of the schedule that caused this event.
	Name string `json:"name,omitempty"`

	// The IS0-8601 date time strings in UTC that this event was scheduled for.
	Time string `json:"time,omitempty"`

	// type
	Type TimerType `json:"type,omitempty"`
}

// Validate validates this timer event
func (m *TimerEvent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TimerEvent) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	if err := m.Type.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("type")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TimerEvent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TimerEvent) UnmarshalBinary(b []byte) error {
	var res TimerEvent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
