// Code generated by go-swagger; DO NOT EDIT.

package smartapp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UninstallData The data payload to an execution request with an AppLifecycle of UNINSTALL.
// swagger:model UninstallData
type UninstallData struct {

	// installed app
	// Required: true
	InstalledApp *InstalledApp `json:"installedApp"`
}

// Validate validates this uninstall data
func (m *UninstallData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInstalledApp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UninstallData) validateInstalledApp(formats strfmt.Registry) error {

	if err := validate.Required("installedApp", "body", m.InstalledApp); err != nil {
		return err
	}

	if m.InstalledApp != nil {
		if err := m.InstalledApp.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("installedApp")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UninstallData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UninstallData) UnmarshalBinary(b []byte) error {
	var res UninstallData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
