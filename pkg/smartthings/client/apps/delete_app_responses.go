// Code generated by go-swagger; DO NOT EDIT.

package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/SmartThingsOSS/smartapp-go/pkg/smartthings/models"
)

// DeleteAppReader is a Reader for the DeleteApp structure.
type DeleteAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteAppOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteAppBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteAppUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteAppForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewDeleteAppTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteAppDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteAppOK creates a DeleteAppOK with default headers values
func NewDeleteAppOK() *DeleteAppOK {
	return &DeleteAppOK{}
}

/*DeleteAppOK handles this case with default header values.

The number of deleted apps.
*/
type DeleteAppOK struct {
	Payload models.DeleteAppResponse
}

func (o *DeleteAppOK) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appNameOrId}][%d] deleteAppOK  %+v", 200, o.Payload)
}

func (o *DeleteAppOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppBadRequest creates a DeleteAppBadRequest with default headers values
func NewDeleteAppBadRequest() *DeleteAppBadRequest {
	return &DeleteAppBadRequest{}
}

/*DeleteAppBadRequest handles this case with default header values.

Bad request
*/
type DeleteAppBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *DeleteAppBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appNameOrId}][%d] deleteAppBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAppBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppUnauthorized creates a DeleteAppUnauthorized with default headers values
func NewDeleteAppUnauthorized() *DeleteAppUnauthorized {
	return &DeleteAppUnauthorized{}
}

/*DeleteAppUnauthorized handles this case with default header values.

Not authenticated
*/
type DeleteAppUnauthorized struct {
}

func (o *DeleteAppUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appNameOrId}][%d] deleteAppUnauthorized ", 401)
}

func (o *DeleteAppUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAppForbidden creates a DeleteAppForbidden with default headers values
func NewDeleteAppForbidden() *DeleteAppForbidden {
	return &DeleteAppForbidden{}
}

/*DeleteAppForbidden handles this case with default header values.

Not authorized
*/
type DeleteAppForbidden struct {
}

func (o *DeleteAppForbidden) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appNameOrId}][%d] deleteAppForbidden ", 403)
}

func (o *DeleteAppForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAppTooManyRequests creates a DeleteAppTooManyRequests with default headers values
func NewDeleteAppTooManyRequests() *DeleteAppTooManyRequests {
	return &DeleteAppTooManyRequests{}
}

/*DeleteAppTooManyRequests handles this case with default header values.

Too many requests
*/
type DeleteAppTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *DeleteAppTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appNameOrId}][%d] deleteAppTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteAppTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAppDefault creates a DeleteAppDefault with default headers values
func NewDeleteAppDefault(code int) *DeleteAppDefault {
	return &DeleteAppDefault{
		_statusCode: code,
	}
}

/*DeleteAppDefault handles this case with default header values.

Unexpected error
*/
type DeleteAppDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the delete app default response
func (o *DeleteAppDefault) Code() int {
	return o._statusCode
}

func (o *DeleteAppDefault) Error() string {
	return fmt.Sprintf("[DELETE /apps/{appNameOrId}][%d] deleteApp default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteAppDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
