// Code generated by go-swagger; DO NOT EDIT.

package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/SmartThingsOSS/smartapp-go/pkg/smartthings/models"
)

// PatchAppTagsReader is a Reader for the PatchAppTags structure.
type PatchAppTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchAppTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchAppTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchAppTagsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPatchAppTagsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPatchAppTagsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPatchAppTagsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPatchAppTagsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchAppTagsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchAppTagsOK creates a PatchAppTagsOK with default headers values
func NewPatchAppTagsOK() *PatchAppTagsOK {
	return &PatchAppTagsOK{}
}

/*PatchAppTagsOK handles this case with default header values.

A response containing an App's tags.
*/
type PatchAppTagsOK struct {
	Payload *models.PatchTagsResponse
}

func (o *PatchAppTagsOK) Error() string {
	return fmt.Sprintf("[PATCH /apps/{appNameOrId}/tags][%d] patchAppTagsOK  %+v", 200, o.Payload)
}

func (o *PatchAppTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PatchTagsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAppTagsBadRequest creates a PatchAppTagsBadRequest with default headers values
func NewPatchAppTagsBadRequest() *PatchAppTagsBadRequest {
	return &PatchAppTagsBadRequest{}
}

/*PatchAppTagsBadRequest handles this case with default header values.

Bad request
*/
type PatchAppTagsBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *PatchAppTagsBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /apps/{appNameOrId}/tags][%d] patchAppTagsBadRequest  %+v", 400, o.Payload)
}

func (o *PatchAppTagsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAppTagsUnauthorized creates a PatchAppTagsUnauthorized with default headers values
func NewPatchAppTagsUnauthorized() *PatchAppTagsUnauthorized {
	return &PatchAppTagsUnauthorized{}
}

/*PatchAppTagsUnauthorized handles this case with default header values.

Unauthorized
*/
type PatchAppTagsUnauthorized struct {
}

func (o *PatchAppTagsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /apps/{appNameOrId}/tags][%d] patchAppTagsUnauthorized ", 401)
}

func (o *PatchAppTagsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchAppTagsForbidden creates a PatchAppTagsForbidden with default headers values
func NewPatchAppTagsForbidden() *PatchAppTagsForbidden {
	return &PatchAppTagsForbidden{}
}

/*PatchAppTagsForbidden handles this case with default header values.

Forbidden
*/
type PatchAppTagsForbidden struct {
}

func (o *PatchAppTagsForbidden) Error() string {
	return fmt.Sprintf("[PATCH /apps/{appNameOrId}/tags][%d] patchAppTagsForbidden ", 403)
}

func (o *PatchAppTagsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchAppTagsUnprocessableEntity creates a PatchAppTagsUnprocessableEntity with default headers values
func NewPatchAppTagsUnprocessableEntity() *PatchAppTagsUnprocessableEntity {
	return &PatchAppTagsUnprocessableEntity{}
}

/*PatchAppTagsUnprocessableEntity handles this case with default header values.

Unprocessable Entity
*/
type PatchAppTagsUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *PatchAppTagsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /apps/{appNameOrId}/tags][%d] patchAppTagsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchAppTagsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAppTagsTooManyRequests creates a PatchAppTagsTooManyRequests with default headers values
func NewPatchAppTagsTooManyRequests() *PatchAppTagsTooManyRequests {
	return &PatchAppTagsTooManyRequests{}
}

/*PatchAppTagsTooManyRequests handles this case with default header values.

Too many requests
*/
type PatchAppTagsTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *PatchAppTagsTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /apps/{appNameOrId}/tags][%d] patchAppTagsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchAppTagsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAppTagsDefault creates a PatchAppTagsDefault with default headers values
func NewPatchAppTagsDefault(code int) *PatchAppTagsDefault {
	return &PatchAppTagsDefault{
		_statusCode: code,
	}
}

/*PatchAppTagsDefault handles this case with default header values.

Unexpected error
*/
type PatchAppTagsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the patch app tags default response
func (o *PatchAppTagsDefault) Code() int {
	return o._statusCode
}

func (o *PatchAppTagsDefault) Error() string {
	return fmt.Sprintf("[PATCH /apps/{appNameOrId}/tags][%d] patchAppTags default  %+v", o._statusCode, o.Payload)
}

func (o *PatchAppTagsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
