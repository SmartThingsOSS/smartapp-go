// Code generated by go-swagger; DO NOT EDIT.

package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/SmartThingsOSS/smartapp-go/pkg/smartthings/models"
)

// UpdateAppReader is a Reader for the UpdateApp structure.
type UpdateAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateAppOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateAppBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateAppUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateAppForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewUpdateAppUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewUpdateAppTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewUpdateAppDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateAppOK creates a UpdateAppOK with default headers values
func NewUpdateAppOK() *UpdateAppOK {
	return &UpdateAppOK{}
}

/*UpdateAppOK handles this case with default header values.

An app model.
*/
type UpdateAppOK struct {
	Payload *models.App
}

func (o *UpdateAppOK) Error() string {
	return fmt.Sprintf("[PUT /apps/{appNameOrId}][%d] updateAppOK  %+v", 200, o.Payload)
}

func (o *UpdateAppOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.App)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppBadRequest creates a UpdateAppBadRequest with default headers values
func NewUpdateAppBadRequest() *UpdateAppBadRequest {
	return &UpdateAppBadRequest{}
}

/*UpdateAppBadRequest handles this case with default header values.

Bad request
*/
type UpdateAppBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *UpdateAppBadRequest) Error() string {
	return fmt.Sprintf("[PUT /apps/{appNameOrId}][%d] updateAppBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateAppBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppUnauthorized creates a UpdateAppUnauthorized with default headers values
func NewUpdateAppUnauthorized() *UpdateAppUnauthorized {
	return &UpdateAppUnauthorized{}
}

/*UpdateAppUnauthorized handles this case with default header values.

Not authenticated
*/
type UpdateAppUnauthorized struct {
}

func (o *UpdateAppUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /apps/{appNameOrId}][%d] updateAppUnauthorized ", 401)
}

func (o *UpdateAppUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAppForbidden creates a UpdateAppForbidden with default headers values
func NewUpdateAppForbidden() *UpdateAppForbidden {
	return &UpdateAppForbidden{}
}

/*UpdateAppForbidden handles this case with default header values.

Not authorized
*/
type UpdateAppForbidden struct {
}

func (o *UpdateAppForbidden) Error() string {
	return fmt.Sprintf("[PUT /apps/{appNameOrId}][%d] updateAppForbidden ", 403)
}

func (o *UpdateAppForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAppUnprocessableEntity creates a UpdateAppUnprocessableEntity with default headers values
func NewUpdateAppUnprocessableEntity() *UpdateAppUnprocessableEntity {
	return &UpdateAppUnprocessableEntity{}
}

/*UpdateAppUnprocessableEntity handles this case with default header values.

Unprocessable Entity
*/
type UpdateAppUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *UpdateAppUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /apps/{appNameOrId}][%d] updateAppUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateAppUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppTooManyRequests creates a UpdateAppTooManyRequests with default headers values
func NewUpdateAppTooManyRequests() *UpdateAppTooManyRequests {
	return &UpdateAppTooManyRequests{}
}

/*UpdateAppTooManyRequests handles this case with default header values.

Too many requests
*/
type UpdateAppTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *UpdateAppTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /apps/{appNameOrId}][%d] updateAppTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateAppTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAppDefault creates a UpdateAppDefault with default headers values
func NewUpdateAppDefault(code int) *UpdateAppDefault {
	return &UpdateAppDefault{
		_statusCode: code,
	}
}

/*UpdateAppDefault handles this case with default header values.

Unexpected error
*/
type UpdateAppDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the update app default response
func (o *UpdateAppDefault) Code() int {
	return o._statusCode
}

func (o *UpdateAppDefault) Error() string {
	return fmt.Sprintf("[PUT /apps/{appNameOrId}][%d] updateApp default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateAppDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
