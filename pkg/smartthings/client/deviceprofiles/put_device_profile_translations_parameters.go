// Code generated by go-swagger; DO NOT EDIT.

package deviceprofiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/SmartThingsOSS/smartapp-go/pkg/smartthings/models"
)

// NewPutDeviceProfileTranslationsParams creates a new PutDeviceProfileTranslationsParams object
// with the default values initialized.
func NewPutDeviceProfileTranslationsParams() *PutDeviceProfileTranslationsParams {
	var ()
	return &PutDeviceProfileTranslationsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutDeviceProfileTranslationsParamsWithTimeout creates a new PutDeviceProfileTranslationsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutDeviceProfileTranslationsParamsWithTimeout(timeout time.Duration) *PutDeviceProfileTranslationsParams {
	var ()
	return &PutDeviceProfileTranslationsParams{

		timeout: timeout,
	}
}

// NewPutDeviceProfileTranslationsParamsWithContext creates a new PutDeviceProfileTranslationsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutDeviceProfileTranslationsParamsWithContext(ctx context.Context) *PutDeviceProfileTranslationsParams {
	var ()
	return &PutDeviceProfileTranslationsParams{

		Context: ctx,
	}
}

// NewPutDeviceProfileTranslationsParamsWithHTTPClient creates a new PutDeviceProfileTranslationsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutDeviceProfileTranslationsParamsWithHTTPClient(client *http.Client) *PutDeviceProfileTranslationsParams {
	var ()
	return &PutDeviceProfileTranslationsParams{
		HTTPClient: client,
	}
}

/*PutDeviceProfileTranslationsParams contains all the parameters to send to the API endpoint
for the put device profile translations operation typically these are written to a http.Request
*/
type PutDeviceProfileTranslationsParams struct {

	/*Authorization
	  OAuth token

	*/
	Authorization string
	/*DeviceProfileID
	  the device profile ID

	*/
	DeviceProfileID string
	/*Locale
	  The tag of the locale as defined in [RFC bcp47](http://www.rfc-editor.org/rfc/bcp/bcp47.txt).

	*/
	Locale string
	/*Translations*/
	Translations *models.DeviceProfileTranslations

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) WithTimeout(timeout time.Duration) *PutDeviceProfileTranslationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) WithContext(ctx context.Context) *PutDeviceProfileTranslationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) WithHTTPClient(client *http.Client) *PutDeviceProfileTranslationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) WithAuthorization(authorization string) *PutDeviceProfileTranslationsParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithDeviceProfileID adds the deviceProfileID to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) WithDeviceProfileID(deviceProfileID string) *PutDeviceProfileTranslationsParams {
	o.SetDeviceProfileID(deviceProfileID)
	return o
}

// SetDeviceProfileID adds the deviceProfileId to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) SetDeviceProfileID(deviceProfileID string) {
	o.DeviceProfileID = deviceProfileID
}

// WithLocale adds the locale to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) WithLocale(locale string) *PutDeviceProfileTranslationsParams {
	o.SetLocale(locale)
	return o
}

// SetLocale adds the locale to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) SetLocale(locale string) {
	o.Locale = locale
}

// WithTranslations adds the translations to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) WithTranslations(translations *models.DeviceProfileTranslations) *PutDeviceProfileTranslationsParams {
	o.SetTranslations(translations)
	return o
}

// SetTranslations adds the translations to the put device profile translations params
func (o *PutDeviceProfileTranslationsParams) SetTranslations(translations *models.DeviceProfileTranslations) {
	o.Translations = translations
}

// WriteToRequest writes these params to a swagger request
func (o *PutDeviceProfileTranslationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	// path param deviceProfileId
	if err := r.SetPathParam("deviceProfileId", o.DeviceProfileID); err != nil {
		return err
	}

	// path param locale
	if err := r.SetPathParam("locale", o.Locale); err != nil {
		return err
	}

	if o.Translations != nil {
		if err := r.SetBodyParam(o.Translations); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
