// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/SmartThingsOSS/smartapp-go/pkg/smartthings/models"
)

// CreateDeviceEventsReader is a Reader for the CreateDeviceEvents structure.
type CreateDeviceEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDeviceEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateDeviceEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateDeviceEventsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCreateDeviceEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateDeviceEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewCreateDeviceEventsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewCreateDeviceEventsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCreateDeviceEventsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateDeviceEventsOK creates a CreateDeviceEventsOK with default headers values
func NewCreateDeviceEventsOK() *CreateDeviceEventsOK {
	return &CreateDeviceEventsOK{}
}

/*CreateDeviceEventsOK handles this case with default header values.

Created events.
*/
type CreateDeviceEventsOK struct {
	Payload models.CreateDeviceEventsResponse
}

func (o *CreateDeviceEventsOK) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/events][%d] createDeviceEventsOK  %+v", 200, o.Payload)
}

func (o *CreateDeviceEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDeviceEventsBadRequest creates a CreateDeviceEventsBadRequest with default headers values
func NewCreateDeviceEventsBadRequest() *CreateDeviceEventsBadRequest {
	return &CreateDeviceEventsBadRequest{}
}

/*CreateDeviceEventsBadRequest handles this case with default header values.

Bad request
*/
type CreateDeviceEventsBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CreateDeviceEventsBadRequest) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/events][%d] createDeviceEventsBadRequest  %+v", 400, o.Payload)
}

func (o *CreateDeviceEventsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDeviceEventsUnauthorized creates a CreateDeviceEventsUnauthorized with default headers values
func NewCreateDeviceEventsUnauthorized() *CreateDeviceEventsUnauthorized {
	return &CreateDeviceEventsUnauthorized{}
}

/*CreateDeviceEventsUnauthorized handles this case with default header values.

Not authenticated
*/
type CreateDeviceEventsUnauthorized struct {
}

func (o *CreateDeviceEventsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/events][%d] createDeviceEventsUnauthorized ", 401)
}

func (o *CreateDeviceEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDeviceEventsForbidden creates a CreateDeviceEventsForbidden with default headers values
func NewCreateDeviceEventsForbidden() *CreateDeviceEventsForbidden {
	return &CreateDeviceEventsForbidden{}
}

/*CreateDeviceEventsForbidden handles this case with default header values.

Not authorized
*/
type CreateDeviceEventsForbidden struct {
}

func (o *CreateDeviceEventsForbidden) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/events][%d] createDeviceEventsForbidden ", 403)
}

func (o *CreateDeviceEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDeviceEventsUnprocessableEntity creates a CreateDeviceEventsUnprocessableEntity with default headers values
func NewCreateDeviceEventsUnprocessableEntity() *CreateDeviceEventsUnprocessableEntity {
	return &CreateDeviceEventsUnprocessableEntity{}
}

/*CreateDeviceEventsUnprocessableEntity handles this case with default header values.

Unprocessable Entity
*/
type CreateDeviceEventsUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *CreateDeviceEventsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/events][%d] createDeviceEventsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateDeviceEventsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDeviceEventsTooManyRequests creates a CreateDeviceEventsTooManyRequests with default headers values
func NewCreateDeviceEventsTooManyRequests() *CreateDeviceEventsTooManyRequests {
	return &CreateDeviceEventsTooManyRequests{}
}

/*CreateDeviceEventsTooManyRequests handles this case with default header values.

Too many requests
*/
type CreateDeviceEventsTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *CreateDeviceEventsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/events][%d] createDeviceEventsTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateDeviceEventsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDeviceEventsDefault creates a CreateDeviceEventsDefault with default headers values
func NewCreateDeviceEventsDefault(code int) *CreateDeviceEventsDefault {
	return &CreateDeviceEventsDefault{
		_statusCode: code,
	}
}

/*CreateDeviceEventsDefault handles this case with default header values.

Unexpected error
*/
type CreateDeviceEventsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the create device events default response
func (o *CreateDeviceEventsDefault) Code() int {
	return o._statusCode
}

func (o *CreateDeviceEventsDefault) Error() string {
	return fmt.Sprintf("[POST /devices/{deviceId}/events][%d] createDeviceEvents default  %+v", o._statusCode, o.Payload)
}

func (o *CreateDeviceEventsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
