// Code generated by go-swagger; DO NOT EDIT.

package installedapps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/SmartThingsOSS/smartapp-go/pkg/smartthings/models"
)

// PatchInstalledAppTagsReader is a Reader for the PatchInstalledAppTags structure.
type PatchInstalledAppTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchInstalledAppTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchInstalledAppTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchInstalledAppTagsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPatchInstalledAppTagsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPatchInstalledAppTagsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPatchInstalledAppTagsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPatchInstalledAppTagsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchInstalledAppTagsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchInstalledAppTagsOK creates a PatchInstalledAppTagsOK with default headers values
func NewPatchInstalledAppTagsOK() *PatchInstalledAppTagsOK {
	return &PatchInstalledAppTagsOK{}
}

/*PatchInstalledAppTagsOK handles this case with default header values.

A response containing an InstalledApp's tags.
*/
type PatchInstalledAppTagsOK struct {
	Payload *models.PatchTagsResponse
}

func (o *PatchInstalledAppTagsOK) Error() string {
	return fmt.Sprintf("[PATCH /installedapps/{installedAppId}/tags][%d] patchInstalledAppTagsOK  %+v", 200, o.Payload)
}

func (o *PatchInstalledAppTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PatchTagsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchInstalledAppTagsBadRequest creates a PatchInstalledAppTagsBadRequest with default headers values
func NewPatchInstalledAppTagsBadRequest() *PatchInstalledAppTagsBadRequest {
	return &PatchInstalledAppTagsBadRequest{}
}

/*PatchInstalledAppTagsBadRequest handles this case with default header values.

Bad request
*/
type PatchInstalledAppTagsBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *PatchInstalledAppTagsBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /installedapps/{installedAppId}/tags][%d] patchInstalledAppTagsBadRequest  %+v", 400, o.Payload)
}

func (o *PatchInstalledAppTagsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchInstalledAppTagsUnauthorized creates a PatchInstalledAppTagsUnauthorized with default headers values
func NewPatchInstalledAppTagsUnauthorized() *PatchInstalledAppTagsUnauthorized {
	return &PatchInstalledAppTagsUnauthorized{}
}

/*PatchInstalledAppTagsUnauthorized handles this case with default header values.

Unauthorized
*/
type PatchInstalledAppTagsUnauthorized struct {
}

func (o *PatchInstalledAppTagsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /installedapps/{installedAppId}/tags][%d] patchInstalledAppTagsUnauthorized ", 401)
}

func (o *PatchInstalledAppTagsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchInstalledAppTagsForbidden creates a PatchInstalledAppTagsForbidden with default headers values
func NewPatchInstalledAppTagsForbidden() *PatchInstalledAppTagsForbidden {
	return &PatchInstalledAppTagsForbidden{}
}

/*PatchInstalledAppTagsForbidden handles this case with default header values.

Forbidden
*/
type PatchInstalledAppTagsForbidden struct {
}

func (o *PatchInstalledAppTagsForbidden) Error() string {
	return fmt.Sprintf("[PATCH /installedapps/{installedAppId}/tags][%d] patchInstalledAppTagsForbidden ", 403)
}

func (o *PatchInstalledAppTagsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchInstalledAppTagsUnprocessableEntity creates a PatchInstalledAppTagsUnprocessableEntity with default headers values
func NewPatchInstalledAppTagsUnprocessableEntity() *PatchInstalledAppTagsUnprocessableEntity {
	return &PatchInstalledAppTagsUnprocessableEntity{}
}

/*PatchInstalledAppTagsUnprocessableEntity handles this case with default header values.

Unprocessable Entity
*/
type PatchInstalledAppTagsUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *PatchInstalledAppTagsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /installedapps/{installedAppId}/tags][%d] patchInstalledAppTagsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchInstalledAppTagsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchInstalledAppTagsTooManyRequests creates a PatchInstalledAppTagsTooManyRequests with default headers values
func NewPatchInstalledAppTagsTooManyRequests() *PatchInstalledAppTagsTooManyRequests {
	return &PatchInstalledAppTagsTooManyRequests{}
}

/*PatchInstalledAppTagsTooManyRequests handles this case with default header values.

Too many requests
*/
type PatchInstalledAppTagsTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *PatchInstalledAppTagsTooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /installedapps/{installedAppId}/tags][%d] patchInstalledAppTagsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchInstalledAppTagsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchInstalledAppTagsDefault creates a PatchInstalledAppTagsDefault with default headers values
func NewPatchInstalledAppTagsDefault(code int) *PatchInstalledAppTagsDefault {
	return &PatchInstalledAppTagsDefault{
		_statusCode: code,
	}
}

/*PatchInstalledAppTagsDefault handles this case with default header values.

Unexpected error
*/
type PatchInstalledAppTagsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the patch installed app tags default response
func (o *PatchInstalledAppTagsDefault) Code() int {
	return o._statusCode
}

func (o *PatchInstalledAppTagsDefault) Error() string {
	return fmt.Sprintf("[PATCH /installedapps/{installedAppId}/tags][%d] patchInstalledAppTags default  %+v", o._statusCode, o.Payload)
}

func (o *PatchInstalledAppTagsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
