// Code generated by go-swagger; DO NOT EDIT.

package locations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/SmartThingsOSS/smartapp-go/pkg/smartthings/models"
)

// UpdateLocationReader is a Reader for the UpdateLocation structure.
type UpdateLocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateLocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateLocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateLocationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateLocationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateLocationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewUpdateLocationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewUpdateLocationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewUpdateLocationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateLocationOK creates a UpdateLocationOK with default headers values
func NewUpdateLocationOK() *UpdateLocationOK {
	return &UpdateLocationOK{}
}

/*UpdateLocationOK handles this case with default header values.

A Location.
*/
type UpdateLocationOK struct {
	Payload *models.Location
}

func (o *UpdateLocationOK) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}][%d] updateLocationOK  %+v", 200, o.Payload)
}

func (o *UpdateLocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Location)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocationBadRequest creates a UpdateLocationBadRequest with default headers values
func NewUpdateLocationBadRequest() *UpdateLocationBadRequest {
	return &UpdateLocationBadRequest{}
}

/*UpdateLocationBadRequest handles this case with default header values.

Bad request
*/
type UpdateLocationBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *UpdateLocationBadRequest) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}][%d] updateLocationBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateLocationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocationUnauthorized creates a UpdateLocationUnauthorized with default headers values
func NewUpdateLocationUnauthorized() *UpdateLocationUnauthorized {
	return &UpdateLocationUnauthorized{}
}

/*UpdateLocationUnauthorized handles this case with default header values.

Not authenticated
*/
type UpdateLocationUnauthorized struct {
}

func (o *UpdateLocationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}][%d] updateLocationUnauthorized ", 401)
}

func (o *UpdateLocationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLocationForbidden creates a UpdateLocationForbidden with default headers values
func NewUpdateLocationForbidden() *UpdateLocationForbidden {
	return &UpdateLocationForbidden{}
}

/*UpdateLocationForbidden handles this case with default header values.

Not authorized
*/
type UpdateLocationForbidden struct {
}

func (o *UpdateLocationForbidden) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}][%d] updateLocationForbidden ", 403)
}

func (o *UpdateLocationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateLocationUnprocessableEntity creates a UpdateLocationUnprocessableEntity with default headers values
func NewUpdateLocationUnprocessableEntity() *UpdateLocationUnprocessableEntity {
	return &UpdateLocationUnprocessableEntity{}
}

/*UpdateLocationUnprocessableEntity handles this case with default header values.

Unprocessable Entity
*/
type UpdateLocationUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *UpdateLocationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}][%d] updateLocationUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateLocationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocationTooManyRequests creates a UpdateLocationTooManyRequests with default headers values
func NewUpdateLocationTooManyRequests() *UpdateLocationTooManyRequests {
	return &UpdateLocationTooManyRequests{}
}

/*UpdateLocationTooManyRequests handles this case with default header values.

Too many requests
*/
type UpdateLocationTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *UpdateLocationTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}][%d] updateLocationTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateLocationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateLocationDefault creates a UpdateLocationDefault with default headers values
func NewUpdateLocationDefault(code int) *UpdateLocationDefault {
	return &UpdateLocationDefault{
		_statusCode: code,
	}
}

/*UpdateLocationDefault handles this case with default header values.

Unexpected error
*/
type UpdateLocationDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the update location default response
func (o *UpdateLocationDefault) Code() int {
	return o._statusCode
}

func (o *UpdateLocationDefault) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}][%d] updateLocation default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateLocationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
