// Code generated by go-swagger; DO NOT EDIT.

package schedules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/SmartThingsOSS/smartapp-go/pkg/smartthings/models"
)

// GetSchedulesReader is a Reader for the GetSchedules structure.
type GetSchedulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSchedulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSchedulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSchedulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetSchedulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSchedulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetSchedulesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetSchedulesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSchedulesOK creates a GetSchedulesOK with default headers values
func NewGetSchedulesOK() *GetSchedulesOK {
	return &GetSchedulesOK{}
}

/*GetSchedulesOK handles this case with default header values.

A paged schedules list
*/
type GetSchedulesOK struct {
	Payload *models.PagedSchedules
}

func (o *GetSchedulesOK) Error() string {
	return fmt.Sprintf("[GET /installedapps/{installedAppId}/schedules][%d] getSchedulesOK  %+v", 200, o.Payload)
}

func (o *GetSchedulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagedSchedules)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesBadRequest creates a GetSchedulesBadRequest with default headers values
func NewGetSchedulesBadRequest() *GetSchedulesBadRequest {
	return &GetSchedulesBadRequest{}
}

/*GetSchedulesBadRequest handles this case with default header values.

Bad request
*/
type GetSchedulesBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetSchedulesBadRequest) Error() string {
	return fmt.Sprintf("[GET /installedapps/{installedAppId}/schedules][%d] getSchedulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetSchedulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesUnauthorized creates a GetSchedulesUnauthorized with default headers values
func NewGetSchedulesUnauthorized() *GetSchedulesUnauthorized {
	return &GetSchedulesUnauthorized{}
}

/*GetSchedulesUnauthorized handles this case with default header values.

Not authenticated
*/
type GetSchedulesUnauthorized struct {
}

func (o *GetSchedulesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /installedapps/{installedAppId}/schedules][%d] getSchedulesUnauthorized ", 401)
}

func (o *GetSchedulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSchedulesForbidden creates a GetSchedulesForbidden with default headers values
func NewGetSchedulesForbidden() *GetSchedulesForbidden {
	return &GetSchedulesForbidden{}
}

/*GetSchedulesForbidden handles this case with default header values.

Not authorized
*/
type GetSchedulesForbidden struct {
}

func (o *GetSchedulesForbidden) Error() string {
	return fmt.Sprintf("[GET /installedapps/{installedAppId}/schedules][%d] getSchedulesForbidden ", 403)
}

func (o *GetSchedulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSchedulesTooManyRequests creates a GetSchedulesTooManyRequests with default headers values
func NewGetSchedulesTooManyRequests() *GetSchedulesTooManyRequests {
	return &GetSchedulesTooManyRequests{}
}

/*GetSchedulesTooManyRequests handles this case with default header values.

Too many requests
*/
type GetSchedulesTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *GetSchedulesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /installedapps/{installedAppId}/schedules][%d] getSchedulesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetSchedulesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchedulesDefault creates a GetSchedulesDefault with default headers values
func NewGetSchedulesDefault(code int) *GetSchedulesDefault {
	return &GetSchedulesDefault{
		_statusCode: code,
	}
}

/*GetSchedulesDefault handles this case with default header values.

Unexpected error
*/
type GetSchedulesDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get schedules default response
func (o *GetSchedulesDefault) Code() int {
	return o._statusCode
}

func (o *GetSchedulesDefault) Error() string {
	return fmt.Sprintf("[GET /installedapps/{installedAppId}/schedules][%d] getSchedules default  %+v", o._statusCode, o.Payload)
}

func (o *GetSchedulesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
