// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CapabilitySummary capability summary
// swagger:model CapabilitySummary
type CapabilitySummary struct {

	// A URL safe unique identifier for the capability.
	ID string `json:"id,omitempty"`

	// The status of the capability.
	// * __proposed__ - The capability is under a review and refinement process. The capability definition may go through changes, some of which may be breaking.
	// * __live__ - The capability has been through review and the definition has been solidified. Live capabilities can no longer be altered.
	// * __deprecated__ - The capability is marked for removal and should only be used during a period of migration to allow for existing integrations and automations to continue to work.
	// * __dead__ - The usage of a deprecated capability has dropped to a sufficiently low level to warrant removal. The capability definition still exists but can no longer be used by automations or implemented by devices.
	//
	// Enum: [proposed live deprecated dead]
	Status string `json:"status,omitempty"`

	// The version number of the capability.
	Version *int64 `json:"version,omitempty"`
}

// Validate validates this capability summary
func (m *CapabilitySummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var capabilitySummaryTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["proposed","live","deprecated","dead"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		capabilitySummaryTypeStatusPropEnum = append(capabilitySummaryTypeStatusPropEnum, v)
	}
}

const (

	// CapabilitySummaryStatusProposed captures enum value "proposed"
	CapabilitySummaryStatusProposed string = "proposed"

	// CapabilitySummaryStatusLive captures enum value "live"
	CapabilitySummaryStatusLive string = "live"

	// CapabilitySummaryStatusDeprecated captures enum value "deprecated"
	CapabilitySummaryStatusDeprecated string = "deprecated"

	// CapabilitySummaryStatusDead captures enum value "dead"
	CapabilitySummaryStatusDead string = "dead"
)

// prop value enum
func (m *CapabilitySummary) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, capabilitySummaryTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CapabilitySummary) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CapabilitySummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CapabilitySummary) UnmarshalBinary(b []byte) error {
	var res CapabilitySummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
