// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// DeviceIntegrationType The type of device integration.
// If the type is DTH, the device implementation is a groovy Device Handler and the details are in the "dth" field.
// If the type is ENDPOINT_APP, the device implementation is a SmartApp and the details are in the "app" field.
//
// swagger:model DeviceIntegrationType
type DeviceIntegrationType string

const (

	// DeviceIntegrationTypeDTH captures enum value "DTH"
	DeviceIntegrationTypeDTH DeviceIntegrationType = "DTH"

	// DeviceIntegrationTypeENDPOINTAPP captures enum value "ENDPOINT_APP"
	DeviceIntegrationTypeENDPOINTAPP DeviceIntegrationType = "ENDPOINT_APP"
)

// for schema
var deviceIntegrationTypeEnum []interface{}

func init() {
	var res []DeviceIntegrationType
	if err := json.Unmarshal([]byte(`["DTH","ENDPOINT_APP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIntegrationTypeEnum = append(deviceIntegrationTypeEnum, v)
	}
}

func (m DeviceIntegrationType) validateDeviceIntegrationTypeEnum(path, location string, value DeviceIntegrationType) error {
	if err := validate.Enum(path, location, value, deviceIntegrationTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this device integration type
func (m DeviceIntegrationType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDeviceIntegrationTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
