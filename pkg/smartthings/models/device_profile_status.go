// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// DeviceProfileStatus The lifecycle status of a device profile.
// 'DEVELOPMENT' - Device profile can be modified. The profile is only available to the developer and can only be used with a self-published app.
// 'PUBLISHED' - Device profile can be shared with other users, but cannot be modified.
//
// swagger:model DeviceProfileStatus
type DeviceProfileStatus string

const (

	// DeviceProfileStatusDEVELOPMENT captures enum value "DEVELOPMENT"
	DeviceProfileStatusDEVELOPMENT DeviceProfileStatus = "DEVELOPMENT"

	// DeviceProfileStatusPUBLISHED captures enum value "PUBLISHED"
	DeviceProfileStatusPUBLISHED DeviceProfileStatus = "PUBLISHED"
)

// for schema
var deviceProfileStatusEnum []interface{}

func init() {
	var res []DeviceProfileStatus
	if err := json.Unmarshal([]byte(`["DEVELOPMENT","PUBLISHED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceProfileStatusEnum = append(deviceProfileStatusEnum, v)
	}
}

func (m DeviceProfileStatus) validateDeviceProfileStatusEnum(path, location string, value DeviceProfileStatus) error {
	if err := validate.Enum(path, location, value, deviceProfileStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this device profile status
func (m DeviceProfileStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDeviceProfileStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
