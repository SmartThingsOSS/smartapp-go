// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// SubscriptionSource The type of the event that is being subscribed to.
// swagger:model SubscriptionSource
type SubscriptionSource string

const (

	// SubscriptionSourceDEVICE captures enum value "DEVICE"
	SubscriptionSourceDEVICE SubscriptionSource = "DEVICE"

	// SubscriptionSourceCAPABILITY captures enum value "CAPABILITY"
	SubscriptionSourceCAPABILITY SubscriptionSource = "CAPABILITY"
)

// for schema
var subscriptionSourceEnum []interface{}

func init() {
	var res []SubscriptionSource
	if err := json.Unmarshal([]byte(`["DEVICE","CAPABILITY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionSourceEnum = append(subscriptionSourceEnum, v)
	}
}

func (m SubscriptionSource) validateSubscriptionSourceEnum(path, location string, value SubscriptionSource) error {
	if err := validate.Enum(path, location, value, subscriptionSourceEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this subscription source
func (m SubscriptionSource) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSubscriptionSourceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
